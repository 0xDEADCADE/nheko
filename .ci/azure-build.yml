
steps:
- bash: |
    export CXX=${CXX_COMPILER}
    export CC=${C_COMPILER}
    # Use TRAVIS_TAG if defined, or the short commit SHA otherwise
    export VERSION=${TRAVIS_TAG:-$(git rev-parse --short HEAD)}

    ./.ci/install.sh
    export PATH=/usr/local/bin:${PATH}

    ./.ci/script.sh
    sed -i -e "s/VERSION_NAME_VALUE/${VERSION}/g" ./.ci/bintray-release.json || true
    cp ./.ci/bintray-release.json .
- task: CopyFiles@2
  inputs:
    #sourceFolder: # Optional
    contents: |
      'nheko*.dmg'
      'nheko*.AppImage'
    targetFolder: $(Build.ArtifactStagingDirectory)
    #cleanTargetFolder: false # Optional
    #overWrite: false # Optional
    #flattenFolders: false # Optional
  # Create a variable for build success
- bash: ls ${BUILD.ARTIFACTSTAGINGDIRECTORY}
- pwsh: if( (Get-ChildItem $(Build.ArtifactStagingDirectory) | Measure-Object).Count -eq 0) { echo '##vso[task.setvariable variable=buildSuccess]false' } else { echo '##vso[task.setvariable variable=buildSuccess]true' }
# delete the release if it already exists to avoid an error
- task: GitHubRelease@0
  condition: and(succeeded(), eq(variables['buildSuccess'], 'true') )
  inputs:
    gitHubConnection: nheko-reborn-pipeline
    repositoryName: '$(Build.Repository.Name)'
    action: 'delete' # Options: create, edit, delete
    target: '$(Build.SourceVersion)' # Required when action == Create || Action == Edit
    tagSource: 'manual' # Required when action == Create# Options: auto, manual
    tag: $(Build.BuildNumber) # Required when action == Edit || Action == Delete || TagSource == Manual
    #title: # Optional
    #releaseNotesSource: 'file' # Optional. Options: file, input
    #releaseNotesFile: CHANGELOG.md # Optional
    #releaseNotes: # Optional
    #assets: '$(Build.ArtifactStagingDirectory)/*' # Optional
    #assetUploadMode: 'delete' # Optional. Options: delete, replace
    #isDraft: false # Optional
    #isPreRelease: true # Optional
    #addChangeLog: true # Optional
- task: GitHubRelease@0
  condition: and(succeeded(), eq(variables['buildSuccess'], 'true') )
  inputs:
    gitHubConnection: nheko-reborn-pipeline
    repositoryName: '$(Build.Repository.Name)'
    action: 'create' # Options: create, edit, delete
    target: '$(Build.SourceVersion)' # Required when action == Create || Action == Edit
    tagSource: 'manual' # Required when action == Create# Options: auto, manual
    tag: $(Build.BuildNumber) # Required when action == Edit || Action == Delete || TagSource == Manual
    #title: # Optional
    releaseNotesSource: 'file' # Optional. Options: file, input
    releaseNotesFile: CHANGELOG.md # Optional
    #releaseNotes: # Optional
    assets: '$(Build.ArtifactStagingDirectory)/*' # Optional
    assetUploadMode: 'delete' # Optional. Options: delete, replace
    #isDraft: false # Optional
    isPreRelease: true # Optional
    addChangeLog: true # Optional